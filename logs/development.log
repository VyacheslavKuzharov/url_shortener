request: /build.js
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://nodejs.org/api/fs.html#fs_fs_write_fd_buffer_offset_length_position_callback'[39m }, { fields: [90mundefined[39m })
request: /api/v1/shorten?long_url=https://www.npmjs.com/package/bootstrap
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://www.npmjs.com/package/bootstrap'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'https://www.npmjs.com/package/bootstrap'[39m, encoded_hash: [32m'Tb2YenWU'[39m, _id: ObjectId("5822204b07e54a623d03b7d2"), expire_at: new Date("Wed, 23 Nov 2016 17:55:15 GMT"), created_at: new Date("Tue, 08 Nov 2016 18:58:19 GMT"), __v: [33m0[39m })
request: /api/v1/shorten?long_url=%22https://www.npmjs.com/package/bootstrap%22
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://www.npmjs.com/package/1'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'https://www.npmjs.com/package/1'[39m, encoded_hash: [32m'Ii6Cw4RR'[39m, _id: ObjectId("582221ca07e54a623d03b7d3"), expire_at: new Date("Wed, 23 Nov 2016 17:55:15 GMT"), created_at: new Date("Tue, 08 Nov 2016 19:04:42 GMT"), __v: [33m0[39m })
request: /api/v1/shorten
request: /api/v1/shorten
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?url=%22http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do%22
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?url=%22http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do%22
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten.json?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:19:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten.json?url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
request: /
request: /
request: /
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:18:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:18:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
request: /api/v1/shorten?long_url=http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do
TypeError: Parameter "url" must be a string, not undefined
    at Url.parse (url.js:79:11)
    at Object.urlParse [as parse] (url.js:73:5)
    at Object.checkUrl (/home/vk/js_projects/url_shortener/lib/url-handler.js:4:22)
    at /home/vk/js_projects/url_shortener/app/api/concerns/shorten.js:18:16
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:131:13)
    at Route.dispatch (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:277:22
    at Function.process_params (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:330:12)
    at next (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:271:10)
    at Function.handle (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:176:3)
    at router (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:46:12)
    at Layer.handle [as handle_request] (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:312:13)
    at /home/vk/js_projects/url_shortener/node_modules/express/lib/router/index.js:280:7
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'http://stackoverflow.com/questions/24168759/sending-post-parameters-with-postman-doesnt-work-but-sending-get-parameters-do'[39m, encoded_hash: [32m'iZDSO1Q8'[39m, _id: ObjectId("5822289dcf339871f4fbc11e"), expire_at: new Date("Wed, 23 Nov 2016 19:33:41 GMT"), created_at: new Date("Tue, 08 Nov 2016 19:33:49 GMT"), __v: [33m0[39m })
request: /build.js
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /build.js
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'http://stackoverflow.com/questions/2047465/how-can-i-delete-a-file-from-git-repo'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'http://stackoverflow.com/questions/2047465/how-can-i-delete-a-file-from-git-repo'[39m, encoded_hash: [32m'2xvcx5PK'[39m, _id: ObjectId("58223950bba29d7bdaa13be7"), expire_at: new Date("Wed, 23 Nov 2016 20:44:04 GMT"), created_at: new Date("Tue, 08 Nov 2016 20:45:04 GMT"), __v: [33m0[39m })
request: /2xvcx5PK
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'2xvcx5PK'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css.map
request: /
request: /
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /build.min.js
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /build.min.js
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
Error: /home/vk/js_projects/url_shortener/app/views/layouts/application.pug:6:20
    4|         base(href='/')
    5|         meta(charset='UTF-8')
  > 6|         script(src=#{test1})
--------------------------^
    7|         link(rel='stylesheet', href='/css/bootstrap.min.css')
    8|         title URL Shortener
    9|     body

Syntax Error: Unexpected character '#'
    at makeError (/home/vk/js_projects/url_shortener/node_modules/pug-error/index.js:32:13)
    at Lexer.error (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:58:15)
    at Lexer.assertExpression (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:86:12)
    at Lexer.attrs (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1085:18)
    at Lexer.callLexerFunction (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1315:23)
    at Lexer.advance (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1352:15)
    at Lexer.callLexerFunction (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1315:23)
    at Lexer.getTokens (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1371:12)
    at lex (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:12:42)
    at Object.load.string.lex (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:93:27)
    at Function.loadString [as string] (/home/vk/js_projects/url_shortener/node_modules/pug-load/index.js:44:24)
    at compileBody (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:80:18)
    at Object.exports.compile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:237:16)
    at handleTemplateCache (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:210:25)
    at Object.exports.renderFile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:410:10)
    at Object.exports.renderFile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:400:21)
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
Error: /home/vk/js_projects/url_shortener/app/views/layouts/application.pug:6:20
    4|         base(href='/')
    5|         meta(charset='UTF-8')
  > 6|         script(src=#{test1})
--------------------------^
    7|         link(rel='stylesheet', href='/css/bootstrap.min.css')
    8|         title URL Shortener
    9|     body

Syntax Error: Unexpected character '#'
    at makeError (/home/vk/js_projects/url_shortener/node_modules/pug-error/index.js:32:13)
    at Lexer.error (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:58:15)
    at Lexer.assertExpression (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:86:12)
    at Lexer.attrs (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1085:18)
    at Lexer.callLexerFunction (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1315:23)
    at Lexer.advance (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1352:15)
    at Lexer.callLexerFunction (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1315:23)
    at Lexer.getTokens (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:1371:12)
    at lex (/home/vk/js_projects/url_shortener/node_modules/pug-lexer/index.js:12:42)
    at Object.load.string.lex (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:93:27)
    at Function.loadString [as string] (/home/vk/js_projects/url_shortener/node_modules/pug-load/index.js:44:24)
    at compileBody (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:80:18)
    at Object.exports.compile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:237:16)
    at handleTemplateCache (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:210:25)
    at Object.exports.renderFile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:410:10)
    at Object.exports.renderFile (/home/vk/js_projects/url_shortener/node_modules/pug/lib/index.js:400:21)
request: /
request: /css/bootstrap.min.css
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /build.js
request: /css/bootstrap.min.css
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css.map
request: /
request: /build.js
request: /css/bootstrap.min.css
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /daily_digest
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'daily_digest'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css.map
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: //api/v1/shorten
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'http://stackoverflow.com/questions/5869216/how-to-store-node-js-deployment-settings-configuration-files'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'http://stackoverflow.com/questions/5869216/how-to-store-node-js-deployment-settings-configuration-files'[39m, encoded_hash: [32m'aadzUgNb'[39m, _id: ObjectId("5822f5a858f4ff270eac5ab3"), expire_at: new Date("Thu, 24 Nov 2016 10:08:28 GMT"), created_at: new Date("Wed, 09 Nov 2016 10:08:40 GMT"), __v: [33m0[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'undefined'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
request: /undefined
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
request: /undefined
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /undefined
request: /undefined
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
request: /
request: /kkjhk
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
request: /
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://codetuts.tech/build-a-url-shortener-node-hapi-js/'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'https://codetuts.tech/build-a-url-shortener-node-hapi-js/'[39m, encoded_hash: [32m'9HOpImL1'[39m, _id: ObjectId("5822fdfad2a7552b2821f2ec"), expire_at: new Date("Thu, 24 Nov 2016 10:43:36 GMT"), created_at: new Date("Wed, 09 Nov 2016 10:44:10 GMT"), __v: [33m0[39m })
request: /9HOpImL1
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /favicon.ico
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://codetuts.tech/build-a-url-shortener-node-hapi-js/'[39m }, { fields: [90mundefined[39m })
request: /9HOpImL1
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'9HOpImL1'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'https://codetuts.tech/build-a-url-shortener-node-hapi-js/'[39m }, { fields: [90mundefined[39m })
request: /9HOpImL1
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'9HOpImL1'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'sdfwf'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /assets/stylesheets/404.css
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'sdfwf'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /assets/stylesheets/404.css
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css.map
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /api/v1/shorten
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /css/bootstrap.min.css
request: /build.js
request: /css/bootstrap.min.css.map
request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
request: /api/v1/shorten
request: /api/v1/shorten
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'http://stackoverflow.com/questions/29100658/angularjs-input-fields-empty-or-not-validation'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'http://stackoverflow.com/questions/29100658/angularjs-input-fields-empty-or-not-validation'[39m, encoded_hash: [32m'HTpfR5pv'[39m, _id: ObjectId("582310da1d314137156039fa"), expire_at: new Date("Thu, 24 Nov 2016 11:57:37 GMT"), created_at: new Date("Wed, 09 Nov 2016 12:04:42 GMT"), __v: [33m0[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started POST for request: /api/v1/shorten
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started POST for request: /api/v1/shorten
undefined
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started POST for request: /api/v1/shorten
undefined
[0;36mMongoose:[0m urls.findOne({ long_url: [32m'http://stackoverflow.com/questions/29714416/how-to-check-all-fields-are-empty-in-angularjs'[39m }, { fields: [90mundefined[39m })
[0;36mMongoose:[0m urls.insert({ long_url: [32m'http://stackoverflow.com/questions/29714416/how-to-check-all-fields-are-empty-in-angularjs'[39m, encoded_hash: [32m'g8U2fjNJ'[39m, _id: ObjectId("58231725bb41743d0913111f"), expire_at: new Date("Thu, 24 Nov 2016 12:21:48 GMT"), created_at: new Date("Wed, 09 Nov 2016 12:31:33 GMT"), __v: [33m0[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /node_modules/angular-restmod/dist/angular-restmod-bundle.min.js
Started GET for request: /node_modules/angular-restmod/dist/angular-restmod-bundle.min.js
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /node_modules/angular-restmod/dist/angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /node_modules/angular-restmod/dist/angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /node_modules/angular-restmod/dist/angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /
Started GET for request: /build.js
Started GET for request: /css/bootstrap.min.css
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/http://localhost:3000/api/v1/urls
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.min.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
Started GET for request: /css/bootstrap.min.css
Started GET for request: /build.js
Started GET for request: /angular-restmod-bundle.min.js
Started GET for request: /css/bootstrap.min.css.map
Started GET for request: /api/v1/urls
[0;36mMongoose:[0m urls.find({}, { fields: [90mundefined[39m })
Started GET for request: /favicon.ico
[0;36mMongoose:[0m urls.findAndModify({ encoded_hash: [32m'favicon.ico'[39m }, [], { [32m'$inc'[39m: { count: [33m1[39m } }, { new: [33mfalse[39m, upsert: [33mfalse[39m })
